library(forecast)
x<-1:10
y<-sqrt(x)
plot(y~x, type='o')

``
##두개 차이 구하면 얻어지는게 이거
diff(y)
##정상있는 데이터로 잘 바뀜
plot(diff(y), type="o")
``



lm(y~x)->model1
summary(model1)

library(car)
durbinWatsonTest(model1)
plot(model1$fitted.values, model1$residuals)

acf(model1$residuals) ##어느시점에서 영향을 받는지 4개 뭐시기 보여줌
##한시점전이 상관성 어느정돈지 알려줌?

pacf(model1$residuals)
##acf, pacf같이씀


##두개 차이 구하면 얻어지는게 이거
diff(y)
##정상있는 데이터로 잘 바뀜
plot(diff(y), type="o")

ts(y) %>% 
  auto.arima()








library(prophet)
library(dplyr)
library(lubridate) ##음력양력 계산할수 있게
library(vroom)
library(tidyverse)

wp_log_peyton <- vroom("https://raw.githubusercontent.com/facebook/prophet/main/examples/example_wp_log_peyton_manning.csv", delim = ",")
head(wp_log_peyton)
plot(wp_log_peyton$y, type="l")

library(pkgbuild)
head(wp_log_peyton)
mod<-prophet(wp_log_peyton)
future<-make_future_dataframe(mod,preiods=365)
pred<-predict(mod, future)
plot(mod,pred)
prophet_plot_components(mod,pred)


wp_log_r2<-wp_log_peyton %>% mutate(cap=8.5)
mod_logistic <- prophet(wp_log_r2, growth = "logistic")
future <- make_future_dataframe(mod_logistic, periods = 1826) %>% 
  mutate(cap = 8.5)
pred_logistic <- predict(mod_logistic, future)
plot(mod_logistic, pred_logistic)
