head(mtcars)
#1.산점도그리기
plot(mpg~wt,mtcars)
#2.상관분석
cor(mtcars$wt, mtcars$mpg)
##-값이 나오면 음의 관계, 0.8이 나오므로 매우 높은 상관관계를 가진다가

#3.회귀계수를 회귀식으로 추정
model1<- lm(mpg~wt, mtcars)
model1
predict(model1, newdata = data.frame(wt=c(4.5,5.5)))#(예측)
predict(model1, newdata = data.frame(wt=c(4.5)),
        interval = "confidence")   #(평균에 대한 예측값의 신뢰구간)

predict(model1, newdata = data.frame(wt=c(4.5)),
        interval = "prediction")  #(새로운 값 하나가 나왔을 때의 신뢰구간이라 평균에 대한 신뢰구간 보다 값이 크다)

##mpg=37.285-5.344wt

library(car)
model1<- lm(mpg~wt+I(wt^2), mtcars)
summary(model1)
durbinWatsonTest(model1)
#2차 회귀식으로 추정(model1<- lm(mpg~wt+I(wt^2), mtcars)
#인경우)
#mpg=43.93-13.38wt+1.17wt

#4.회귀모형해석
summary(model1)
summary(mtcars$mpg - model1$fitted.values)
#5.회귀모형 가정 확인
#정규성, 독립성, 등분산성
###정규성(2가지 방법)
#시각적
qqnorm(model1$residuals)
qqline(model1$residuals)
#수치적
shapiro.test(model1$residuals)
##독립성
library(car)
#시각적(잔차도표)
plot(model1$fitted.values, model1$residuals)
#수치적
durbinWatsonTest(model1)
##등분산성
#시각적
spreadLevelPlot(model1)
#수치적
ncvTest(model1)
#7.회귀분석 시각화
library(ggplot2)
ggplot(data = mtcars, aes(x=wt, y=mpg))+
  geom_point()+
  geom_smooth(method = "lm")



x<- seq(1,5,0.2)
y<-x^2
plot(x,y, pch=16)
df<-data.frame(x,y)

model<-lm(y~x,df)
summary(model)

plot(model$fitted.values,model$residuals,
     pch=16,cex=3)




out <- lm(dist~speed, data=cars)
#정규성은 만족 하지만 등분산성 만족 안함, 정규성 만족

out2 <- lm(sqrt(dist)~speed,data=cars)

#sqrt를 씌워준후 정규성 만족, 등분산성도 만족, 독립성 만족

#예측값이 루트가 씌워진 상태라 예측값 구할 때 제곱이 들어간다



volume = c(412,953,929,1492,419,1010,595,1034)
weight = c(250,700,650,975,350,950,425,725)

data <- data.frame(volume, weight)
out <- lm(weight~volume, data=data)
confint(out)

###정규성
library(car)
shapiro.test(out$residuals)
##정규성을 만족하지 않으면(좌 우 대칭이 아님)
#해결방법
boxCox(weight~volume)#(람다 값은 y 파워 이정도면 정규성을 따르겠다~)
#Box-Cox transformation은 종속변수를 변환하여 최대한 좌우대칭이 되도록 만들어 줍니다

model1<-lm(dist~speed,cars)
boxCox(model1)

box1 <-boxCox(weight~volume, lambda=seq(0.5,1.3,0.05)) #람다해서 숫자를 넣으면 그 부분만 보여줌



##분위수 회귀모형: quantreg 패키지 필요
if(!require(quantreg)) install.packages("quantreg")
library(quantreg)

out2 <- rq(weight~volume, 0.5 )
summary(out2)
#중앙값을 예측하는 선형식


###독립성
##만족하지 않는다면 일차 회기식이 아니란것
#만족하지 않을 경우 해결 방법
#방법1(오차텀을 다음 텀에 영향을 미치게 바꾼다)
if(!require(nlme)) install.packages("nlme")
library(nlme)

out1 <- gls(Quakes~Year, data=data, correlation = corAR1(form=~Year), method="ML")
acf(resid(out1, type="normalized"))

#방법2(2차나 3차 같은 다항식으로 바꾸거나 비선형식으로 바꿔보자)


###등분산성(분산이 동일하지 않음)
##만족하지 않을 경우 해결 방법
#방법1(y(파워)를 조정하면서 분산동일하게 해보자)
out1 <- lm(los^-0.06~tkatzmean, data=hospital1)
spreadLevelPlot(out1)

#방법2(ϵ ∼N(0,3.16+1.0224speed)/speed에 따라 값이 바뀌게 모형을 만들어서)
out.gls <- gls(dist~ speed, data=cars, weight = varConstPower(1, form=~speed))
summary(out.gls)



여기서부터 정리리리리리리리리리리리리리리리리리리리리리리리리리리리리ㅣ리리리리리리리리리리리리리리리리리리리
sest.seed(1234)
e=rnorm(21)
y=x+e
plot(x,y,pch=16)
z=data.frame(x,y)
out=lm(y~x,z)
summary(out)


out1=lm(y~x+0,z)#y절편 추정되지 않는다(+0,-1)/디폴트값이 +1이기때문에 +0,-1을 해야 나오지 않는다
summary(out1)

out2=lm(y~x,z)
summary(out2)
#y절편 추정됨(x+1이 디폴트 값으로 추정되기 때문에 +1을 넣지 않아도 절편 추정된다)


sum(out1$residuals^2)

sum(out2$residuals^2)
summary(out1)#결정계수:0.90
summary(out2)#결정계수:0.6914
sum(out2$residuals^2)

y2=10+x-4*x^2+2*x^3+e
out11=lm(y~1+x+I(x^2)+I(x^3),z)
out11 
sest.seed(1234)
x=seq(1,5,0.2)
e=rnorm(21)
y2=10+x-4*x^2+2*x^3+e
plot(x,y,pch=16)
z=data.frame(x,y)
out11=lm(y~1+x+I(x^2)+I(x^3),z)
out11 



#부분회귀
y <- c(362,357,111,703,494,410,63,616,468,973,235,180,69,305,106,155,422,44,1008,225,
         +        321,1001,531,143,251,216,57,146,226,169,32,75,102,4,68,102,462,295,196,50,739,
         +        287,226,706,127,85,234,153,4,373,54,81)
x <- c(23.5,22.4,6.1,35.9,35.5,23.2,9.1,27.5,28.6,41.3,16.9,18.2,9,28.6,12.7,11.8,27.9,21.6,
         +        45.9,11.4,16.6,40.7,22.4,17.4,14.3,14.6,6.6,10.6,14.3,3.4,5.1,4.1,4.1,1.7,7.5,7.8,22.6,
         +        8.6,7.7,7.8,34.7,15.6,18.5,35,16.5,11.3,7.7,14.8,2,12.4,9.2,11.8)
data <- data.frame(x,y)
library(segmented)
out=lm(y~x,data)
seg.out <- segmented(out)
summary(seg.out)
sest.seed(1234)
x=seq(1,5,0.2)
e=rnorm(21)
y=x+e
plot(x,y,pch=16)
z=data.frame(x,y)
out2=lm(y~x,z)
summary(out2)
#y절편 추정됨(x+1이 디폴트 값으로 추정되기 때문에 +1을 넣지 않아도 절편 추정된다)
out1=lm(y~x+0,z)
summary(out1)
out11=lm(y~1+x+I(x^2)+I(x^3),z)
out11 
summary(out1)#결정계수:0.90
summary(out2)#결정계수:0.6914
sum(out2$residuals^2)


#다차항
set.seed(1234)
x=seq(1,5,0.2)
e=rnorm(21)
y2=10+x-4*x^2+2*x^3+e/10
plot(x,y,pch=16)
z=data.frame(x,y)
out11=lm(y~1+x+I(x^2)+I(x^3),z)
summary(out11) 


##과제
##slr12
data <- read.csv("C:/Users/OWNER/Downloads/slr12.csv")

data2 <- data[complete.cases(data),]
data2 <- na.omit(data)
data3 <- data2[data2$Y<1800,]

#1. 산점도 그리기
plot(Y~X, data3)

#2. 상관계수 및 상관분석하기
cor(data3$Y, data3$X)
## 양의 관계이면서 0.4679795이 나오므로 

#3. 선형식 추정하기
out1 <- lm(Y~X, data3)
out1
out2 <- lm(Y~X+I(X^2), data3)
out2

#4. 단순회귀모형 분석결과 해석하기
summary(out2)
summary(out1)

#5. 단수회귀모형 가정 확인하기
## 정규성 검정
shapiro.test(out1$residuals)
shapiro.test(out2$residuals)

## 독립성 검정
library(car)
durbinWatsonTest(out1)
durbinWatsonTest(out2)

##등분산성 검정
ncvTest(out1)
ncvTest(out2)

#6. 분석결과 시각화 하기
library(ggplot2)
ggplot(data = data3, aes(x=X, y=Y))+
  geom_point()+
  geom_smooth(method = "lm")





##slr09




##slr05
data<-read.table("clipboard",header = T)
head(data)

#산점도
plot(Y~X, data)
data2<-data[data$Y<140,]
plot(Y~X, data2)

cor(data2$X, data2$Y)

out<-lm(Y~X, data2)
summary(out)

x<-seq(0, 40, 0.5)
y<-predict(out, data.frame(x=x))
plot(Y~X, data2)
lines(x,y, col="blue")


abline(lm(Y~X, data2), col="blue")
library(segmented)
out1<-lm(Y~X, data2)
out2<-segmented(out1)
out2
plot(out2, ylim=c(0,60))
points(data2＄X, data2＄Y)
------------------------------------------
##과제 내가 푼 답
##단순회귀분석 해보기 과제
##22018244 주수영
##slr12
data <- read.csv("C:/Users/ju011/Downloads/slr12.csv")

data2 <- data[complete.cases(data),]
data2 <- na.omit(data)
data3 <- data2[data2$Y<1800,]

#1. 산점도 그리기
plot(Y~X, data3)

#2. 상관계수 및 상관분석하기
cor(data3$Y, data3$X)
## 양의 관계이면서 0.4679795로 상관관계가 있다.

#3. 선형식 추정하기
out1 <- lm(Y~X, data3)
out1
out2 <- lm(Y~X+I(X^2), data3)
out2

#4. 단순회귀모형 분석결과 해석하기
summary(out2)
summary(out1)
#X = 최초점용예정년,Y = 사용종료예정연도

#5. 단수회귀모형 가정 확인하기
## 정규성 검정
shapiro.test(out1$residuals)#p-value = 0.4292
shapiro.test(out2$residuals)#p-value = 0.8545

## 독립성 검정
library(car)
durbinWatsonTest(out1)# 0.028
durbinWatsonTest(out2)# 0

##등분산성 검정
ncvTest(out1)#p = 0.17227
ncvTest(out2)#p = 0.0075273

#6. 분석결과 시각화 하기
library(ggplot2)
ggplot(data = data3, aes(x=X, y=Y))+
  geom_point()+
  geom_smooth(method = "lm")





##slr09
a<-read.csv("C:/Users/ju011/Downloads/slr09.csv")
head(a)
#1. 산점도 그리기
plot(Y~X,a)

#.2. 상관계수 및 상관분석하기
cor(a$Y,a$X)

#3. 선형식 추정하기
b<-lm(Y~X, a)
b

#4. 단순회귀모형 분석결과 해석하기
summary(b)
#X=우물 물의 PH, Y=우물 물의 중탄산염
#p값이 0.04948

#5. 단순회귀모형 가정 확인하기
##정규성
shapiro.test(b$residuals)
#0.2327

##독립성
library(car)
durbinWatsonTest(b)
#0.004

##등분산성
ncvTest(b)
#0.43111

#6. 분석결과 시각화 하기
library(ggplot2)
ggplot(data=b, aes(x=X, y=Y))+
  geom_point()+
  geom_smooth(method = "lm")





##slr05
data<-read.csv("C:/Users/ju011/Downloads/slr05.csv")
head(data)

#1. 산점도 그리기
plot(Y~X, data)
data2<-data[data$Y<140,]
plot(Y~X, data2)

#.2. 상관계수 및 상관분석하기
cor(data2$Y,data2$X)
#양의관계이면서 0.3682794로 약한 상관관계를 가진다.

#3. 선형식 추정하기
out<-lm(Y~X, data2)

#4. 단순회귀모형 분석결과 해석하기
summary(out)
#X=주택 단위 1000집당 화재 발생, Y=인구 1000명당도난 수 
#값이 0.01783

#5. 단수회귀모형 가정 확인하기
## 정규성 검정
shapiro.test(out$residuals)
#p값이 0.0754

## 독립성 검정
library(car)
durbinWatsonTest(out)
#p값이 0.04

##등분산성 검정
ncvTest(out)
#p값이 0.33926

#6. 분석결과 시각화 하기
library(ggplot2)
ggplot(data = data3, aes(x=X, y=Y))+
  geom_point()+
  geom_smooth(method = "lm")
----------------------------------------


###나중에 할거
#x가 일차선형식이 아니라 다른 모형일 수도 있다.
plot(sin, -pi,pi)#계절성을 반영하는 모형

x<-seq(1,10,0.01)
y<-x+sin(x)
y2<-x
plot(x,y,type = "l")
lines(x,y2,col="blue")


-------------------
##시험
#회귀분석과 상관분석의 차이
##상관분석
#상관분석은 X<->Y가 언제 나오냐 상관 없다(양방향)
#상관계수 r만 나옴

#회귀분석
#회귀분석은 X->Y x에 의해 결정된다.
#선형식이 추정된다. 결정계수, 기울기 가설검정 모형을 적합성검증도 가능

정규성만족X
평균이 아니라 중위수를 설명하는 모형을 세우자
.
.
.



------------------------------
##다중공선성
library(car)
head(airquality)
model1<-lm(Ozone~Solar.R+Wind+Temp+Month,airquality)
summary(model1) 
#moth는 음수지만 p값이 0.05이상이므로 기울기가 0이다. 
#month는유의한 확률이 아니라할쉿다?

#VIF(car불러와야 계산된다)
vif(model1)

##선형성
crPlots(model1)
#점선이
#곡선이
#wind는 일차식이 아닌 이차식을 넣어보자?
model2<-lm(Ozone~Solar.R+Wind+Temp+Month+I(Wind^2),airquality)
summary(model2)
vif(model2)
crPlots(model2)


##변수선탭과 모형선택
#모든 가능한 조합
if(!require(mlbench)) install.pages("mlbench"); library(mlbench)
if(!require(leaps)) install.packages("leaps"); library(leaps)
data("BostonHousing")

m1 <- regsubsets(medv ~., data=BostonHousing)
summary(m1)

plot(m1, scale="adjr2")
#수정된이라는 뜻(수정된 결정계수)
#모수의 수 독리변수의 수가 늘어날수록 

plot(m1, scale="bic")
#scale기준으로 


##전진선택법(아무것도 없는거에서 중요한거 하나씩 넣기/옛날 방법)
#상수만 포함된 모형
model0 <- lm(medv ~1, data=BostonHousing)
add1(model0, scope = ~ crim + zn + indus + chas + nox + rm +
       age + dis + rad + tax + ptratio + b + lstat, test="F")
#f값이 클수록 유의한 변수
#큰 변수 모형에 집어넣고 
model1 <- lm(medv ~lstat, data=BostonHousing)
add1(model1, scope = ~ crim + zn + indus + chas + nox + rm +
       age + dis + rad + tax + ptratio + b + lstat, test="F")
#그 다음 큰거 넣고
model2 <- lm(medv ~lstat+rm, data=BostonHousing)
add1(model2, scope = ~ crim + zn + indus + chas + nox + rm +
       age + dis + rad + tax + ptratio + b + lstat, test="F")
#차례로 큰거 넣기
#통계적으로 유의미한 값이 나올때까지..?
model11 <- lm(medv ~lstat+rm+ptratio+dis+nox+chas+b+zn+crim+rad+tax, data=BostonHousing)
add1(model11, scope = ~ crim + zn + indus + chas + nox + rm +
       age + dis + rad + tax + ptratio + b + lstat, test="F")

#쉽게 사용하는 방법(step함수 사용)
m2 <- step(lm(medv~1, BostonHousing), scope = ~ crim + zn + indus + chas + nox + rm +
             age + dis + rad + tax + ptratio + b + lstat,direction="forward")



##후진제거법(다 넣고 차이가 없는(중요하지 않은거) 변수 하나씩 빼기/옛날방법)
model0 <- lm(medv ~., data=BostonHousing)
drop1(model0, scope = ~ crim + zn + indus + chas + nox + rm +
        age + dis + rad + tax + ptratio + b + lstat, test="F")
#Sum of Sq가 작은거부터 뺀다
model1 <- lm(medv ~.-age, data=BostonHousing)
drop1(model1, scope = ~ crim + zn + indus + chas + nox + rm +
        dis + rad + tax + ptratio + b + lstat, test="F")

#전진선택법과 후진선택법 결과 다르기도함(뭐가 더 좋은지는 모름)
#전진석택법 변수가 적게 선택되는 경향 있음
#후진은 전진석택보다 변수가 좀 더 남아있는 경향이 있
#(통계적측면에선 후진제거법 더 선호함)

##단계적 선택법(전진, 후진 고려된거?)
#전진선택끝내면 후진 돌림 후진 끝나면 전진 수렴할떄까지 돌다가 멈춤
#시간이 오래 걸리지만 적당한 변수 잘 선택하는 경향 있다.

#수정된 결정계수


#변수가 많을수록 새로운 값 예측하기 어려움
#변수가 적음 쉽지만,,,?



###다음시간 수업 
##회귀진단
#지랫대점 이상점 영향점 제거하는게 더 좋은 모형
#데이터의 질이 않좋은거 제거하자 



##레버리지(지렛대점)
#모형에 있어도 큰 지장 없지만
#지렛대점이 잇다는 것은 근처에 유사한 값이 있을 수도 있어 조사해봐야함
#지렛대점 확인
pubs <- data.frame(pubs=c(10,25,40,55,70,85,100,500),
                   deaths=c(1043.822,2086.934,2951.086,3992.459,5088.003,6095.645,6923.497,10000),
                   name=1:8)

plot(pubs$pubs, pubs$deaths, pch=16)
text(pubs$pubs, pubs$deaths, labels=pubs$name, pos=4)
abline(lm(deaths~pubs, data=pubs), col="blue", lwd=2)

fit.pub <- lm(deaths~pubs, data=pubs)
out<-influence(fit.pub)#influence영향력정도를 계산해줌
out$hat#모자행렬
out$hat>2*mean(out$hat)
#모자행렬이 평균의 두배보다 큰지 안큰지/모자 행렬이 평균보다 크면 지렛대점이라고 본다
hatvalues(fit.pub)#(지렛대점 확인)


##이상점
#이상점확인
library(car)#다중공선성확인 VIF값 구하려면 필요
outlierTest(fit.pub)#8번째 이 값이 이상점같아?(이상점 알려줌)
#이상점 제거해주는게 좋음



##영향점
#이 점이 있냐 없냐에 따라 모형에 영향을 미치는 것 
#영향력의 정도 수치화
#영향점확인
rstudent(fit.pub)*sqrt(hatvalues(fit.pub)/(1-hatvalues(fit.pub)))
dffits(fit.pub)

#한번에 확인
influencePlot(fit.pub)#3가지 한번에 확인 가능하다.

#> influencePlot(fit.pub)
#StudRes       Hat      CookD
#1  -1.627653 0.1813863  0.2302244
#7   1.681272 0.1256287  0.1556728
#8 -54.528398 0.9693020 94.5671657

#StudRes 이상치(절댓값이 2를 넘어가면 이상치가 나올 확률이 높다)
#Hat 지렛대점(x축hat-values위에수직선 두번쨰 선을 너어가면 지렛대점/8)
#CookD 영향점(동그라미가 크면 영향점이 크다 영향점에서 다른 애들 보다 큰게 큰거)


fit.pub2 <- lm(deaths~pubs, data=pubs[-8,])
#이상치 영향점 지렛대점에 해당하는 점 하나를 뺀 값
influencePlot(fit.pub2)
summary(fit.pub2)#거의 100% 설명한다
summary(fit.pub)
#평균적인 값을 잘 맞추는 것이 중요


plot(fit.pub)
#엔터쳐서 나오는 순서대로
#잔차도표를 확인할수있는 그림
#qqplot 정규성여부 확인
#등분산성
#지렛대점 이상점 영향점


#이상점 영향점은 모형에서 빼기
data("airquality")
head(airquality)
model1<-lm(Ozone~Solar.R+Wind+Temp, data=airquality)
summary(model1)


#지렛대점
which(hatvalues(model1)>2*mean(hatvalues(model1)))
#9 18 21 48 
#7 14 17 30

#이상점
outlierTest(model1)
#117번쨰 값 이상
#이 117번 빼는 방법 48도 빼는 것
model11<-lm(Ozone~Solar.R+Wind+Temp, data=airquality[-117,])
summary(model11)
model12<-lm(Ozone~Solar.R+Wind+Temp, data=airquality[-c(48,117),])
summary(model12)
#계속 이상치를 제거하다보면 중요한 점이 빠질 수 있음
#두번이나 세번정도 반족수행해서 영향점 이상점 나오면 제거 




#####################과제와 비슷한 예시#####################
m<-read.csv("C:/Users/OWNER/Downloads/manhattan.csv")

library(car)
names(m)
dim(m)
model0<-lm(rent~.,data=m[,2:17])
summary(model0)
##모형 설명력:0.8179

##1.다중공선성
vif(model0)#다중공선성 존재 x(문제 없음),값이 1,2같은 작은 값들이기에

##2.모형선택(변수선택)
if(!require(leaps)) install.packages("leaps"); library(leaps)

m1 <- regsubsets(rent~.,data=m[,2:17])#변수 자동으로 집어넣음/베스트조합 찾아줌

summary(m1)
summary(m1)$adjr2 #수정된 결정계수로?/설명력이 높은것을 찾음?
#8개가 나온 값 중에 8번째 제일 큰 값이?

summary(m1)$bic #bic

summary(m1)$which[8,]#8번쨰 세웠던 변수들 알려줌
#나온 값 중에 false인 값이 영향을 준다?

#true인 값만 넣기
model1<-lm(rent~bathrooms+size_sqft+floor+
             building_age_yrs+neighborhood,data=m)
summary(model1)

summary(model0)
summary(model1)#변수 몇개를 선택하는 것이 좋다.

#방향성을 중요시 해야함
#+,-로/층수에서 +인 것이 위로 올라갈수록 가격이 올라간다.
#건물 나이에서 -는 신축일수록 비싸다

influencePlot(model1)
#nan은 0에서 0을 나눌떄라 이 값은 빼느게 좋음
#hat이 크다는건 지랫대점/있어도 되지만 근처에 값이 많지 않을 경우 빼는게 좋음

#6개의 이상한 값 빼기
m1<-m[-c(5,185,1497,1960,2469,2737),]#항상 일치하지 않음(5번쨰를 빼도 남아있을 수 있음)
dim(m)
dim(m1)

model2<-lm(rent~bathrooms+size_sqft+floor+
             building_age_yrs+neighborhood,data=m1)

summary(model2)#0.8233 설명력 높아짐
summary(model1)#0.8169

influencePlot(model2)
#638,2671
#CookD에서 2269,2671은 영향점?

#의심되는 데이터
#458 638 2269 2671추가하기

m2<-m[-c(5,185,1497,1960,2469,2737,453,638,2269,2671),]
 
model3<-lm(rent~bathrooms+size_sqft+floor+
             building_age_yrs+neighborhood,data=m2)

#모형 설명력 높아짐
summary(model3)#0.8262
summary(model2)#0.8233/이상점 지랫대점 영향점 뺸 결과
summary(model1)#0.8169/모두다 넣음 값
summary(model0)#0.8179
#두세번 하는 것이 좋음



#정규성
shapiro.test(model3$residuals)
#정규성 만족하지 않는다
boxCox(model3)
#람다값은 0에 가까운수?
model4<-lm(rent^-0.1~bathrooms+size_sqft+floor+
             building_age_yrs+neighborhood,data=m2)
shapiro.test(model4$residuals)
#정규성 만족하지 않는다


#독립성
durbinWatsonTest(model3)


#등분산성
ncvTest(model3)
spreadLevelPlot(model3)


#확인해보는게 좋음/앞은 실제값 뒤에는 예측값/두 값이 얼마나 유사한지 확인할 수 있다.
#로그변환 시키면 더 좋을 것 같다~~~~~~~
lot(m2$rent,model3$fitted.values)

