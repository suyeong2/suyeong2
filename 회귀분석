head(mtcars)
#1.산점도그리기
plot(mpg~wt,mtcars)
#2.상관분석
cor(mtcars$wt, mtcars$mpg)
##-값이 나오면 음의 관계, 0.8이 나오므로 매우 높은 상관관계를 가진다가

#3.회귀계수를 회귀식으로 추정
model1<- lm(mpg~wt, mtcars)
model1
predict(model1, newdata = data.frame(wt=c(4.5,5.5)))#(예측)
predict(model1, newdata = data.frame(wt=c(4.5)),
        interval = "confidence")   #(평균에 대한 예측값의 신뢰구간)

predict(model1, newdata = data.frame(wt=c(4.5)),
        interval = "prediction")  #(새로운 값 하나가 나왔을 때의 신뢰구간이라 평균에 대한 신뢰구간 보다 값이 크다)

##mpg=37.285-5.344wt

library(car)
model1<- lm(mpg~wt+I(wt^2), mtcars)
summary(model1)
durbinWatsonTest(model1)
#2차 회귀식으로 추정(model1<- lm(mpg~wt+I(wt^2), mtcars)
#인경우)
#mpg=43.93-13.38wt+1.17wt

#4.회귀모형해석
summary(model1)
summary(mtcars$mpg - model1$fitted.values)
#5.회귀모형 가정 확인
#정규성, 독립성, 등분산성
###정규성(2가지 방법)
#시각적
qqnorm(model1$residuals)
qqline(model1$residuals)
#수치적
shapiro.test(model1$residuals)
##독립성
library(car)
#시각적(잔차도표)
plot(model1$fitted.values, model1$residuals)
#수치적
durbinWatsonTest(model1)
##등분산성
#시각적
spreadLevelPlot(model1)
#수치적
ncvTest(model1)
#7.회귀분석 시각화
library(ggplot2)
ggplot(data = mtcars, aes(x=wt, y=mpg))+
  geom_point()+
  geom_smooth(method = "lm")



x<- seq(1,5,0.2)
y<-x^2
plot(x,y, pch=16)
df<-data.frame(x,y)

model<-lm(y~x,df)
summary(model)

plot(model$fitted.values,model$residuals,
     pch=16,cex=3)




out <- lm(dist~speed, data=cars)
#정규성은 만족 하지만 등분산성 만족 안함, 정규성 만족

out2 <- lm(sqrt(dist)~speed,data=cars)

#sqrt를 씌워준후 정규성 만족, 등분산성도 만족, 독립성 만족

#예측값이 루트가 씌워진 상태라 예측값 구할 때 제곱이 들어간다



volume = c(412,953,929,1492,419,1010,595,1034)
weight = c(250,700,650,975,350,950,425,725)

data <- data.frame(volume, weight)
out <- lm(weight~volume, data=data)
confint(out)

###정규성
library(car)
shapiro.test(out$residuals)
##정규성을 만족하지 않으면(좌 우 대칭이 아님)
#해결방법
boxCox(weight~volume)#(람다 값은 y 파워 이정도면 정규성을 따르겠다~)
#Box-Cox transformation은 종속변수를 변환하여 최대한 좌우대칭이 되도록 만들어 줍니다

model1<-lm(dist~speed,cars)
boxCox(model1)

box1 <-boxCox(weight~volume, lambda=seq(0.5,1.3,0.05)) #람다해서 숫자를 넣으면 그 부분만 보여줌



##분위수 회귀모형: quantreg 패키지 필요
if(!require(quantreg)) install.packages("quantreg")
library(quantreg)

out2 <- rq(weight~volume, 0.5 )
summary(out2)
#중앙값을 예측하는 선형식


###독립성
##만족하지 않는다면 일차 회기식이 아니란것
#만족하지 않을 경우 해결 방법
#방법1(오차텀을 다음 텀에 영향을 미치게 바꾼다)
if(!require(nlme)) install.packages("nlme")
library(nlme)

out1 <- gls(Quakes~Year, data=data, correlation = corAR1(form=~Year), method="ML")
acf(resid(out1, type="normalized"))

#방법2(2차나 3차 같은 다항식으로 바꾸거나 비선형식으로 바꿔보자)


###등분산성(분산이 동일하지 않음)
##만족하지 않을 경우 해결 방법
#방법1(y(파워)를 조정하면서 분산동일하게 해보자)
out1 <- lm(los^-0.06~tkatzmean, data=hospital1)
spreadLevelPlot(out1)

#방법2(ϵ ∼N(0,3.16+1.0224speed)/speed에 따라 값이 바뀌게 모형을 만들어서)
out.gls <- gls(dist~ speed, data=cars, weight = varConstPower(1, form=~speed))
summary(out.gls)



여기서부터 정리리리리리리리리리리리리리리리리리리리리리리리리리리리리ㅣ리리리리리리리리리리리리리리리리리리리
sest.seed(1234)
e=rnorm(21)
y=x+e
plot(x,y,pch=16)
z=data.frame(x,y)
out=lm(y~x,z)
summary(out)

> out=lm(y~x+0,z)
> out1=lm(y~x+0,z)#y절편 추정되지 않는다(+0,-1)/디폴트값이 +1이기때문에 +0,-1을 해야 나오지 않는다
> summary(out1)
> out=lm(y~x,z)#y절편 추정됨
> summary(out)
> out2=lm(y~x,z)
> summary(out2)
> #y절편 추정됨(x+1이 디폴트 값으로 추정되기 때문에 +1을 넣지 않아도 절편 추정된다)
  > out1=lm(y~x+0,z)
> summary(out1)
> sum(out1$residuals^2)
[1] 39.17838
> sum(out2$residuals^2)
[1] 37.45699
> y2=10+x-4*x^2+2*x^3+e
> out11=lm(y~1+x+I(x^2)+I(x^3),z)
> out11 
> sest.seed(1234)
> x=seq(1,5,0.2)
> e=rnorm(21)
> y2=10+x-4*x^2+2*x^3+e
> plot(x,y,pch=16)
> z=data.frame(x,y)
> out11=lm(y~1+x+I(x^2)+I(x^3),z)
> out11 



#부분회귀
> y <- c(362,357,111,703,494,410,63,616,468,973,235,180,69,305,106,155,422,44,1008,225,
         +        321,1001,531,143,251,216,57,146,226,169,32,75,102,4,68,102,462,295,196,50,739,
         +        287,226,706,127,85,234,153,4,373,54,81)
> x <- c(23.5,22.4,6.1,35.9,35.5,23.2,9.1,27.5,28.6,41.3,16.9,18.2,9,28.6,12.7,11.8,27.9,21.6,
         +        45.9,11.4,16.6,40.7,22.4,17.4,14.3,14.6,6.6,10.6,14.3,3.4,5.1,4.1,4.1,1.7,7.5,7.8,22.6,
         +        8.6,7.7,7.8,34.7,15.6,18.5,35,16.5,11.3,7.7,14.8,2,12.4,9.2,11.8)
> data <- data.frame(x,y)
> library(segmented)
> out=lm(y~x,data)
> seg.out <- segmented(out)
> summary(seg.out)
sest.seed(1234)
x=seq(1,5,0.2)
> e=rnorm(21)
> y=x+e
> plot(x,y,pch=16)
> z=data.frame(x,y)
> out2=lm(y~x,z)
> summary(out2)
> #y절편 추정됨(x+1이 디폴트 값으로 추정되기 때문에 +1을 넣지 않아도 절편 추정된다)
  > out1=lm(y~x+0,z)
> summary(out1)
> out11=lm(y~1+x+I(x^2)+I(x^3),z)
> out11 
> summary(out1)#결정계수:0.90
> summary(out2)#결정계수:0.6914
> sum(out2$residuals^2)
#다차항
> set.seed(1234)
> x=seq(1,5,0.2)
> e=rnorm(21)
> y2=10+x-4*x^2+2*x^3+e/10
> plot(x,y,pch=16)
> z=data.frame(x,y)
> out11=lm(y~1+x+I(x^2)+I(x^3),z)
> summary(out11) 



